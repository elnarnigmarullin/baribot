from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher.filters import Text
from utils.storage import load_data, save_data
from utils.calculations import calculate_calories

class CalorieState(StatesGroup):
    sex = State()
    age = State()
    height = State()
    weight = State()
    activity = State()

async def calories_start(message: types.Message):
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add("–ú—É–∂—á–∏–Ω–∞", "–ñ–µ–Ω—â–∏–Ω–∞")
    await message.answer("–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø–æ–ª:", reply_markup=kb)
    await CalorieState.sex.set()

async def get_sex(message: types.Message, state: FSMContext):
    if message.text not in ["–ú—É–∂—á–∏–Ω–∞", "–ñ–µ–Ω—â–∏–Ω–∞"]:
        return await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ: –ú—É–∂—á–∏–Ω–∞ –∏–ª–∏ –ñ–µ–Ω—â–∏–Ω–∞.")
    await state.update_data(sex=message.text.lower())
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç (–≤ –≥–æ–¥–∞—Ö):", reply_markup=types.ReplyKeyboardRemove())
    await CalorieState.age.set()

async def get_age(message: types.Message, state: FSMContext):
    try:
        age = int(message.text)
        if not 10 <= age <= 100:
            raise ValueError
        await state.update_data(age=age)
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ä–æ—Å—Ç –≤ —Å–º:")
        await CalorieState.height.set()
    except ValueError:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç –æ—Ç 10 –¥–æ 100 –ª–µ—Ç.")

async def get_height(message: types.Message, state: FSMContext):
    try:
        height = int(message.text)
        if not 100 <= height <= 250:
            raise ValueError
        await state.update_data(height=height)
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–µ—Å –≤ –∫–≥:")
        await CalorieState.weight.set()
    except ValueError:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ä–æ—Å—Ç –æ—Ç 100 –¥–æ 250 —Å–º.")

async def get_weight(message: types.Message, state: FSMContext):
    try:
        weight = float(message.text)
        if not 30 <= weight <= 300:
            raise ValueError
        await state.update_data(weight=weight)
        kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
        kb.add("–û—á–µ–Ω—å –Ω–∏–∑–∫–∞—è", "–ù–∏–∑–∫–∞—è", "–°—Ä–µ–¥–Ω—è—è", "–í—ã—Å–æ–∫–∞—è", "–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è")
        await message.answer("–£—Ä–æ–≤–µ–Ω—å –≤–∞—à–µ–π —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:", reply_markup=kb)
        await CalorieState.activity.set()
    except ValueError:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–µ—Å –æ—Ç 30 –¥–æ 300 –∫–≥.")

async def get_activity(message: types.Message, state: FSMContext):
    levels = {
        "–û—á–µ–Ω—å –Ω–∏–∑–∫–∞—è": 1.2,
        "–ù–∏–∑–∫–∞—è": 1.375,
        "–°—Ä–µ–¥–Ω—è—è": 1.55,
        "–í—ã—Å–æ–∫–∞—è": 1.725,
        "–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è": 1.9
    }
    if message.text not in levels:
        return await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.")
    activity = levels[message.text]
    data = await state.get_data()
    
    calories = calculate_calories(
        sex=data["sex"],
        age=data["age"],
        weight=data["weight"],
        height=data["height"],
        activity_level=activity
    )

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º
    user_id = str(message.from_user.id)
    all_data = load_data()
    all_data[user_id] = all_data.get(user_id, {})
    all_data[user_id]["calories"] = calories
    save_data(all_data)

    await message.answer(f"üî• –í–∞—à–∞ —Å—É—Ç–æ—á–Ω–∞—è –Ω–æ—Ä–º–∞ –∫–∞–ª–æ—Ä–∏–π: {calories} –∫–∫–∞–ª", reply_markup=types.ReplyKeyboardRemove())
    await state.finish()

def register_handlers(dp: Dispatcher):
    dp.register_message_handler(calories_start, commands=["calories"], state="*")
    dp.register_message_handler(calories_start, Text(equals="üî• –ö–∞–ª–æ—Ä–∞–∂"), state="*")
    dp.register_message_handler(get_sex, state=CalorieState.sex)
    dp.register_message_handler(get_age, state=CalorieState.age)
    dp.register_message_handler(get_height, state=CalorieState.height)
    dp.register_message_handler(get_weight, state=CalorieState.weight)
    dp.register_message_handler(get_activity, state=CalorieState.activity)